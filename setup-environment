#! /bin/bash

thisdir=$(pwd)

if [[ ! -d $thisdir/meta-newbs ]]; then
    echo "meta-newbs not found!"
    echo "please source this script from the NEWBS root"
    return 1
fi
NEWBSROOT=$(readlink -f $thisdir)

if [[ -n $MACHINE ]]; then
    echo "MACHINE set to $MACHINE"
else
    echo "No MACHINE given, defaulting to raspberrypi3"
    export MACHINE=raspberrypi3
fi

if [[ -n $1 ]]; then
    BUILD_DIR="$1"
else
    BUILD_DIR="build-$MACHINE"
fi
echo "Using BUILD_DIR $BUILD_DIR"

DOWNLOAD_DIR=/var/oe-downloads
if [[ ! -d ./downloads ]] && [[ -d $DOWNLOAD_DIR ]]; then
    echo "symlinking downloads to $DOWNLOAD_DIR"
    ln -s $DOWNLOAD_DIR downloads
fi

export TEMPLATECONF="$NEWBSROOT/meta-newbs/conf"
echo $TEMPLATECONF
source oe-core/oe-init-build-env $BUILD_DIR

# now we're in the build directory and should have bblayers.conf.sample and local.conf.sample
# from meta-newbs/conf
BB_CONF="conf/bblayers.conf"
LOCAL_CONF="conf/local.conf"
NEWBS_MARKER="### NEWBS ###"

sed -i "s|##NEWBSROOT##|$NEWBSROOT|g" $BB_CONF

if [[ -d "$NEWBSROOT/meta-python3-compat" ]]; then
    # python3 compatibility layer for building on Arch where /usr/bin/python -> python3
    echo "BBLAYERS += \"$NEWBSROOT/meta-python3-compat\"" >>$BB_CONF
fi


sed -i "/$NEWBS_MARKER/,\$s|^MACHINE.*|MACHINE = \"$MACHINE\"|" $LOCAL_CONF

# unset unused variables
unset thisdir TEMPLATECONF BB_CONF LOCAL_CONF NEWBS_MARKER DOWNLOAD_DIR
