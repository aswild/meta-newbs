From a199a1758ef89b2585ebe926e7c736811fc6c3a5 Mon Sep 17 00:00:00 2001
From: Allen Wild <allenwild93@gmail.com>
Date: Sun, 26 Mar 2017 02:53:35 -0400
Subject: [PATCH 20/21] neostrip: implement read/write ioctls

---
 drivers/spi/neostrip.c      | 69 ++++++++++++++++++++++++++++++++++++---------
 include/uapi/spi/neostrip.h | 18 ++++++++++--
 2 files changed, 70 insertions(+), 17 deletions(-)

diff --git a/drivers/spi/neostrip.c b/drivers/spi/neostrip.c
index ab59c3dddd53..0f533ac948f0 100644
--- a/drivers/spi/neostrip.c
+++ b/drivers/spi/neostrip.c
@@ -449,6 +449,51 @@ static ssize_t neostrip_cdev_write(struct file *fp, const char *buf, size_t size
 // }}}
 
 // ioctl {{{
+
+static long neostrip_handle_ioctl(struct neostrip_chip *chip, struct neostrip_ioc_data __user *ioc_data_user, int read)
+{
+    struct neostrip_ioc_data    *ioc_data = NULL;
+    long                        ret = 0;
+
+    ioc_data = kmalloc(sizeof(*ioc_data), GFP_KERNEL);
+    if (!ioc_data)
+        return -ENOMEM;
+
+    if (copy_from_user(ioc_data, ioc_data_user, sizeof(*ioc_data)))
+    {
+        ret = -EFAULT;
+        goto out;
+    }
+
+    if (!ioc_data->pixels || !ioc_data->count || (ioc_data->offset + ioc_data->count) > chip->strip_len)
+    {
+        ret = -EINVAL;
+        goto out;
+    }
+
+    if (read)
+    {
+        if (copy_to_user(ioc_data->pixels, chip->pixels + ioc_data->offset, ioc_data->count * sizeof(*chip->pixels)))
+        {
+            ret = -EFAULT;
+            goto out;
+        }
+    }
+    else // write
+    {
+        if (copy_from_user(chip->pixels + ioc_data->offset, ioc_data->pixels, ioc_data->count * sizeof(*chip->pixels)))
+        {
+            ret = -EFAULT;
+            goto out;
+        }
+        ret = neostrip_write(chip);
+    }
+
+out:
+    kfree(ioc_data);
+    return ret;
+}
+
 long neostrip_cdev_ioctl(struct file *fp, unsigned int cmd, unsigned long arg)
 {
     struct neostrip_chip    *chip;
@@ -462,24 +507,20 @@ long neostrip_cdev_ioctl(struct file *fp, unsigned int cmd, unsigned long arg)
             dev_info(chip->dev, "ioctl hello with arg 0x%lX\n", arg);
             break;
 
-#if 0
-        case NEOSTRIP_IOC_RCOLOR24:
-            ret = __put_user(chip->color, (__u32 __user *)arg);
+        case NEOSTRIP_IOC_READ:
+            mutex_lock(&chip->lock);
+            ret = neostrip_handle_ioctl(chip, (struct neostrip_ioc_data __user *)arg, 1);
+            mutex_unlock(&chip->lock);
             break;
 
-        case NEOSTRIP_IOC_WCOLOR24:
-            ret = __get_user(value, (u32 __user *)arg);
-            if (!ret)
-            {
-                mutex_lock(&chip->lock);
-                chip->color = value;
-                ret = neostrip_write(chip);
-                mutex_unlock(&chip->lock);
-            }
+        case NEOSTRIP_IOC_WRITE:
+            mutex_lock(&chip->lock);
+            ret = neostrip_handle_ioctl(chip, (struct neostrip_ioc_data __user *)arg, 0);
+            mutex_unlock(&chip->lock);
             break;
-#endif
+
         default:
-            pr_err("neostrip: unknown ioctl\n");
+            dev_err(chip->dev, "unknown ioctl\n");
             ret = -ENOTTY;
             break;
     }
diff --git a/include/uapi/spi/neostrip.h b/include/uapi/spi/neostrip.h
index 2e62aa565a1e..7ad0415d590e 100644
--- a/include/uapi/spi/neostrip.h
+++ b/include/uapi/spi/neostrip.h
@@ -17,9 +17,21 @@
 #define _NEOSTRIP_H_
 
 #include <linux/ioctl.h>
+#include <linux/types.h>
 
-#define NEOSTRIP_IOC_HELLO    _IO('N', 1)
-#define NEOSTRIP_IOC_RCOLOR24 _IOR('N', 2, unsigned long)
-#define NEOSTRIP_IOC_WCOLOR24 _IOW('N', 3, unsigned long)
+struct neostrip_ioc_data {
+    // The first pixel to read/write
+    size_t      offset;
+
+    // how many pixels to read/write
+    size_t      count;
+
+    // data buffer, should be count items long
+    uint32_t    *pixels;
+};
+
+#define NEOSTRIP_IOC_HELLO      _IO('N', 1)
+#define NEOSTRIP_IOC_READ       _IOR('N', 2, struct neostrip_ioc_data *)
+#define NEOSTRIP_IOC_WRITE      _IOW('N', 3, struct neostrip_ioc_data *)
 
 #endif // _NEOSTRIP_H_
-- 
2.14.1

