From df03a9b8318def2c3b040d5616f975777d3dbb0a Mon Sep 17 00:00:00 2001
From: Allen Wild <allenwild93@gmail.com>
Date: Sat, 11 Mar 2017 18:17:38 -0500
Subject: [PATCH 10/13] shiftbrite: implement read/write cdev and ioctls

---
 drivers/misc/shiftbrite.c      | 82 +++++++++++++++++++++++++++++++++---------
 include/uapi/misc/shiftbrite.h |  2 ++
 2 files changed, 68 insertions(+), 16 deletions(-)

diff --git a/drivers/misc/shiftbrite.c b/drivers/misc/shiftbrite.c
index 876a215..714c6e1 100644
--- a/drivers/misc/shiftbrite.c
+++ b/drivers/misc/shiftbrite.c
@@ -113,7 +113,7 @@ static int shiftbrite_write_u32(struct shiftbrite_chip *chip, u32 value)
     struct spi_message msg;
     int ret = 0;
 
-    dev_info(&spi->dev, "writing 0x%08x\n", value);
+    //dev_info(&spi->dev, "writing 0x%08x\n", value);
 
     buf[0] = value >> 24;
     buf[1] = (value & 0x00FF0000) >> 16;
@@ -130,10 +130,11 @@ static int shiftbrite_write_u32(struct shiftbrite_chip *chip, u32 value)
         return ret;
     }
 
-    udelay(10);
+    udelay(15);
     shiftbrite_set_latch(chip, 1);
-    udelay(10);
+    udelay(15);
     shiftbrite_set_latch(chip, 0);
+    udelay(15);
 
     return ret;
 }
@@ -310,39 +311,88 @@ static int shiftbrite_cdev_release(struct inode *inode, struct file *fp)
 
 static ssize_t shiftbrite_cdev_read(struct file *fp, char *buf, size_t count, loff_t *offset)
 {
-    const char message[] = "hello from shiftbrite_cdev_read()\n";
+    struct shiftbrite_chip  *chip;
+    u32                     value;
+    size_t                  len;
+    char                    tbuf[16];
 
-    if (*offset >= sizeof(message))
-        return 0;
+    chip = fp->private_data;
+
+    spin_lock(&chip->lock);
+    value = chip->value24;
+    spin_unlock(&chip->lock);
 
-    if (*offset + count > sizeof(message))
-        count = sizeof(message) - *offset;
+    len = snprintf(tbuf, sizeof(tbuf), "0x%06x\n", value);
 
-    if (copy_to_user(buf, message + *offset, count))
-    {
-        pr_err("%s: copy_to_user() failed\n", __func__);
+    if (*offset >= len)
+        return 0;
+    if (*offset + count > len)
+        count = len - *offset;
+
+    if (copy_to_user(buf, tbuf + *offset, count))
         return -EFAULT;
-    }
+
     *offset += count;
     return count;
 }
 
 static ssize_t shiftbrite_cdev_write(struct file *fp, const char *buf, size_t size, loff_t *offset)
 {
-    printk("%s: user wrote %u bytes: '%.*s'\n", __func__, size, size, buf);
-    return size;
+    struct shiftbrite_chip  *chip;
+    int                     ret;
+    char                    *tbuf;
+
+    chip = fp->private_data;
+
+    // copy to a temporary buffer so we can null-terminate the string
+    tbuf = kzalloc(size + 1, GFP_KERNEL);
+    if (tbuf == NULL)
+        return -ENOMEM;
+
+    ret = copy_from_user(tbuf, buf, size);
+    if (ret)
+    {
+        ret = -EFAULT;
+        goto out;
+    }
+    tbuf[size] = '\0';
+
+    ret = shiftbrite_set_color_from_str(chip, tbuf);
+
+out:
+    kfree(tbuf);
+    return (ret < 0) ? ret : size;
 }
 
 long shiftbrite_cdev_ioctl(struct file *fp, unsigned int cmd, unsigned long arg)
 {
-    //struct shiftbrite_chip *chip;
-    long ret = 0;
+    struct shiftbrite_chip  *chip;
+    long                    ret = 0;
+    u32                     value;
+
+    chip = fp->private_data;
 
     switch (cmd)
     {
         case SHIFTBRITE_IOC_HELLO:
             pr_info("shiftbrite: ioctl hello with arg 0x%lX\n", arg);
             break;
+
+        case SHIFTBRITE_IOC_RCOLOR24:
+            ret = __put_user(chip->value24, (__u32 __user *)arg);
+            break;
+
+        case SHIFTBRITE_IOC_WCOLOR24:
+            ret = __get_user(value, (u32 __user *)arg);
+            if (!ret)
+            {
+                spin_lock(&chip->lock);
+                chip->value24 = value;
+                ret = shiftbrite_write(chip);
+                spin_unlock(&chip->lock);
+            }
+            break;
+
         default:
             pr_err("shiftbrite: unknown ioctl\n");
             ret = -ENOTTY;
diff --git a/include/uapi/misc/shiftbrite.h b/include/uapi/misc/shiftbrite.h
index 717b2c5..b3e93ff 100644
--- a/include/uapi/misc/shiftbrite.h
+++ b/include/uapi/misc/shiftbrite.h
@@ -19,5 +19,7 @@
 #include <linux/ioctl.h>
 
 #define SHIFTBRITE_IOC_HELLO    _IO('S', 1)
+#define SHIFTBRITE_IOC_RCOLOR24 _IOR('S', 2, unsigned long)
+#define SHIFTBRITE_IOC_WCOLOR24 _IOW('S', 3, unsigned long)
 
 #endif // _SHIFTBRITE_H_
-- 
2.9.3

