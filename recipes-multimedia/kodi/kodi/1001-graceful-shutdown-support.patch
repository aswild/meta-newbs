From 78b41ba4efe56f19ccca1a5aee0d7254cdbf7285 Mon Sep 17 00:00:00 2001
From: Allen Wild <allenwild93@gmail.com>
Date: Mon, 15 May 2017 00:26:32 -0400
Subject: [PATCH] Graceful Shutdown Support

Run kodi.bin in the background and save a PID file.
Trap SIGINT and SIGTERM to call `kodi-send --action quit` and wait
for Kodi to try to shut down gracefully.

After 10 seconds, SIGTERM will be sent to kodi.bin.
If running through systemd, combine this patch with KillMode=mixed
so only the wrapper script gets SIGTERM on service stop/restart.
---
 tools/Linux/kodi.sh.in | 37 ++++++++++++++++++++++++++++++++++---
 1 file changed, 34 insertions(+), 3 deletions(-)

diff --git a/tools/Linux/kodi.sh.in b/tools/Linux/kodi.sh.in
index 0a00a32034..aae0badeb6 100644
--- a/tools/Linux/kodi.sh.in
+++ b/tools/Linux/kodi.sh.in
@@ -28,6 +28,10 @@ LIBDIR="@libdir@"
 CRASHLOG_DIR=${CRASHLOG_DIR:-$HOME}
 USERDATA_DIR="${HOME}/.${bin_name}"
 
+PIDFILE=${USERDATA_DIR}/kodi.bin.pid
+KODI_SEND="@bindir@/kodi-send"
+KODI_SEND_PORT=9777
+
 
 # Workaround for high CPU load with nvidia GFX
 export __GL_YIELD=USLEEP
@@ -94,8 +98,8 @@ print_crash_report()
   uname -rvs >> $FILE
   printf " Release: " >> $FILE
   if [ -f /etc/os-release ]; then
-	  . /etc/os-release
-	  echo $NAME $VERSION >> $FILE
+    . /etc/os-release
+    echo $NAME $VERSION >> $FILE
   elif command_exists lsb_release; then
     echo >> $FILE
     lsb_release -a 2> /dev/null | sed -e 's/^/    /' >> $FILE
@@ -149,6 +153,28 @@ print_crash_report()
   echo "Crash report available at $FILE"
 }
 
+graceful_shutdown()
+{
+  echo "kodi.sh Warning: caught signal, attempting to kill Kodi gracefully" >&2
+  $KODI_SEND --port=$KODI_SEND_PORT --action="Quit"
+  if [ -n "$PID" ]; then
+    local wait_time=10
+    local wait_count=0
+    while [ $wait_count -lt $wait_time ] && [ -e /proc/$PID ]; do
+      retry_count=$(( $wait_count + 1 ))
+      sleep 1
+    done
+    if [ -e /proc/$PID ]; then
+      echo "kodi.sh Warning: PID $PID still running after $wait_time seconds" >&2
+      kill -SIGTERM $PID
+    fi
+  fi
+  rm -f $PIDFILE
+  PID=
+}
+
+trap graceful_shutdown SIGINT SIGTERM
+
 migrate_home
 
 if command_exists gdb; then
@@ -163,8 +189,13 @@ LOOP=1
 while [ $(( $LOOP )) = "1" ]
 do
   LOOP=0
-  "$LIBDIR/${bin_name}/${bin_name}.bin" $SAVED_ARGS
+  "$LIBDIR/${bin_name}/${bin_name}.bin" $SAVED_ARGS &
+  PID=$!
+  echo $PID >$PIDFILE
+  wait $PID
   RET=$?
+  rm -f $PIDFILE
+  PID=
   if [ $(( $RET == 65 )) = "1" ]
   then # User requested to restart app
     LOOP=1
-- 
2.13.0

